homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 57.43
  longitude: 11.59
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Stockholm

  customize:
    sun.sun:
      hidden: true
    script.radio_paradise:
      hidden: true
    script.sr_p1:
      hidden: true
    script.sr_p3:
      hidden: true
    script.sr_p4:
      hidden: true
    script.sr_radioapan:
      hidden: true
    script.start_radio:
      hidden: true
    group.Switch:
      hidden: true
    media_player.tak:
      hidden: true

http:
  api_password: !secret ha_api_password
  # Set to 1 to enable development mode
  # development: 1

telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids:
      - !secret telegram_chat_id

notify:
  - name: home_telegram
    platform: telegram
    chat_id: !secret telegram_chat_id 

tellstick:
  signal_repetitions: 3

device_tracker:
  platform: asuswrt
  host: 192.168.1.1
  username: !secret asuswrt_username
  password: !secret asuswrt_password
  track_new_devices: no
  protocol: telnet

modbus:
  type: serial
  method: rtu
  port: /dev/ttyUSB0
  baudrate: 9600
  stopbits: 1
  bytesize: 8
  parity: N

sensor:
  - platform: tellstick
    only_named: 1
    11: Frys
    31: Ute
    80: Våning 3
    53: Vind
    datatype_mask: 1
  
  - platform: modbus
    registers:
      - name: Fan Speed
        slave: 1
        register: 100
        scale: 1
        offset: 0
      - name: Temperature set
        slave: 1
        register: 206
      - name: Supply air
        unit_of_measurement: °C
        slave: 1
        register: 213
        scale: 0.1
        precision: 1
      - name: Extract air
        unit_of_measurement: °C
        slave: 1
        register: 214
        scale: 0.1
        precision: 1
      - name: Exhaust air
        unit_of_measurement: °C
        slave: 1
        register: 215
        scale: 0.1
        precision: 1
      - name: Filter age
        unit_of_measurement: days
        slave: 1
        register: 601
      - name: Replace in
        unit_of_measurement: months
        slave: 1
        register: 602

verisure:
  username: !secret verisure_username
  password: !secret verisure_password
  thermometers: 1
  hygrometers: 1
  smartplugs: 1
  alarm: 1

frontend:

conversation:

history:

logbook:

sun:

group:
  Belysning:
    view: yes
    entities:
      - group.Ute
      - group.Fnster
  Multimedia:
    view: yes
    entities:
      - group.Musik
  Klimat:
    view: yes
    entities:
      - group.Temperatur
      - group.Fuktighet
  Ute:
    - switch.Baksida
    - switch.Entre
    - switch.Balkong
  Fönster:
    - switch.van3_fonster1
    - switch.van3_fonster2
  Radio:
    - media_player.tak
    - input_select.kanal
    - input_slider.radio_volume
  Temperatur:
    - sensor.frys_temperature
    - sensor.hall_nere_temperature
    - sensor.hall_uppe_temperature
    - sensor.vardagsrum_temperature
    - sensor.ute_temperature
    - sensor.vning_3_temperature
    - sensor.vind_temperature
  Fuktighet:
    - sensor.hall_nere_humidity
    - sensor.hall_uppe_humidity
    - sensor.ute_humidity
    - sensor.ute_temperature_2
  Ventilation:
    - sensor.fan_speed
    - input_slider.fan_speed
    - sensor.temperature_set
    - input_slider.temperature_set
    - sensor.filter_age
    - sensor.replace_in
    - sensor.supply_air
    - sensor.extract_air
    - sensor.exhaust_air

media_player:
  - platform: cast
    host: 192.168.1.206

automation:
  - alias: tak remote on
    trigger:
      - platform: state
        entity_id: switch.remotepower
    condition:
      condition: state
      entity_id: switch.remotepower
      state: 'on'
    action:
      entity_id: input_select.kanal
      service: input_select.select_option
      data:
        option: "Radio Paradise"
  
  - alias: tak remote off
    trigger:
      - platform: state
        entity_id: switch.remotepower
    condition:
      condition: state
      entity_id: switch.remotepower
      state: 'off'
    action:
      entity_id: input_select.kanal
      service: input_select.select_option
      data:
        option: "Av"
  
  - alias: tak remote swich station next
    trigger:
      - platform: state
        entity_id: switch.remotechannel
    condition:
      condition: state
      entity_id: switch.remotechannel
      state: 'off'
    action:
      entity_id: input_select.kanal
      service: input_select.select_next
  
  - alias: tak remote switch station previous
    trigger:
      - platform: state
        entity_id: switch.remotechannel
    condition:
      condition: state
      entity_id: switch.remotechannel
      state: 'on'
    action:
      entity_id: input_select.kanal
      service: input_select.select_previous
  
  - alias: tak remote volume up
    trigger:
      - platform: state
        entity_id: switch.remotevolume
    condition:
      condition: state
      entity_id: switch.remotevolume
      state: 'off'
    action:
      service: input_slider.select_value
      entity_id: input_slider.radio_volume
      data_template:
        value: '{{ float(states.input_slider.radio_volume.state) + 10 }}'
  
  - alias: tak remote volume down
    trigger:
      - platform: state
        entity_id: switch.remotevolume
    condition:
      condition: state
      entity_id: switch.remotevolume
      state: 'on'
    action:
      service: input_slider.select_value
      entity_id: input_slider.radio_volume
      data_template:
        value: '{{ float(states.input_slider.radio_volume.state) - 10 }}'

  - alias: Change radio volume
    trigger:
      - platform: state
        entity_id: input_slider.radio_volume
    action:
      service: media_player.volume_set
      entity_id: media_player.tak
      data_template:
        volume_level: '{{ float(states.input_slider.radio_volume.state) / 100 }}'

#  - alias: Roof window open warning
#    trigger:
#      platform: time
#      minutes: 15
#      seconds: 0
#      after: '21:00:00'
#    condition: or
#    conditions:
#      - condition: state
#        entity_id: switch.Takfonster1
#        state: 'on'
#      - condition: state
#        entity_id: switch.Takfonster2
#        state: 'on'
#    action:
#      service: notify.home_telegram
#      data:
#        message: Roof window open


  - alias: Turn on lights outside at sunset
    trigger:
      platform: sun
      event: sunset
    action:
      service: homeassistant.turn_on
      entity_id: group.Ute

  - alias: Turn off lights outside at sunrise
    trigger:
      platform: sun
      event: sunrise
    action:
      service: homeassistant.turn_off
      entity_id: group.Ute

  - alias: Turn off radio
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm_1
        to: 'armed_away'
      - platform: state
        entity_id: input_select.kanal
        to: Av
    action:
      service: media_player.media_pause
      entity_id: media_player.tak

  - alias: Notify alarm state
    trigger:
      - platform: state 
        entity_id: alarm_control_panel.alarm_1
    action:
      service: notify.home_telegram
      data:
        title: alarm
      data_template:
        message: >
          {{ '*' ~ trigger.to_state.state ~ '*'|replace('_', ' ') }}
          by {{ trigger.to_state.attributes.changed_by }}
  
  - alias: Notify door bell
    trigger:
      - platform: state
        entity_id: switch.ringklocka
    condition:
      - condition: state
        entity_id: switch.ringklocka
        state: 'on'
    action:
      service: notify.home_telegram
      data:
        title: ringklocka
        message: ding dong
  
  - alias: Turn on window lights floor three at sunset
    trigger:
      platform: sun
      event: sunset
    action:
      service: homeassistant.turn_on
      entity_id: group.fnster

  - alias: Turn off third floor window light in the evening
    trigger:
      platform: time
      at: '22:30:00'
    action:
      service: homeassistant.turn_off
      entity_id: group.fnster

  - alias: Start Radio
    trigger:
      platform: state
      entity_id: input_select.kanal
    action:
      - entity_id: script.ON
        service: script.start_radio

  - alias: Set fan speed
    trigger:
      platform: state
      entity_id: input_slider.fan_speed
    action:
      service: modbus.write_register
      data:
        unit: 1
        address: 100
      data_template:
        value: '{{ states.input_slider.fan_speed.state|int }}'

  - alias: Set fan speed slider value
    trigger:
      platform: state
      entity_id: sensor.fan_speed
    action:
      service: input_slider.select_value
      data_template:
        entity_id: input_slider.fan_speed
        value: '{{ states.sensor.fan_speed.state }}'
  
  - alias: Set temperature set
    trigger:
      platform: state
      entity_id: input_slider.temperature_set
    action:
      service: modbus.write_register
      data:
          unit: 1
          address: 206
      data_template:
          value: '{{ states.input_slider.temperature_set.state|int }}'

  - alias: Set temperature set slider value
    trigger:
      platform: state
      entity_id: sensor.temperature_set
    action:
      service: input_slider.select_value
      data_template:
        entity_id: input_slider.temperature_set
        value: '{{ states.sensor.temperature_set.state }}'
  
input_select:
  kanal:
    name: Kanal
    options:
      - Av
      - Radio Paradise
      - P1
      - P3
      - P4
      - Radioapan
      - P4 Bjällerklang
    initial: Av

input_slider:
  radio_volume:
    name: Volym
    min: 0
    max: 100
    initial: 35
    step: 1
    unit_of_measurement: '%'
  fan_speed:
    name: Fan speed
    min: 1
    max: 3
    step: 1
    unit_of_measurement: step
  temperature_set:
    name: Temperature set
    min: 1
    max: 3
    step: 1
    unit_of_measurement: step

script:
  start_radio:
    alias: Start Radio
    sequence:
      - alias: Power on    
        service: media_player.turn_on   
        data:
          entity_id: media_player.tak     
      - alias: Set volume  
        service: media_player.volume_set
        data:      
          entity_id: media_player.tak
        data_template:
          volume_level: '{{ float(states.input_slider.radio_volume.state) / 100 }}'
      - alias: Play
        service: media_player.play_media
        data_template:
          entity_id: media_player.tak
          media_content_type: video/mp4
          media_content_id: >
            {% if is_state('input_select.kanal', 'Radio Paradise') %}
              http://stream-uk1.radioparadise.com/rp_192.ogg
            {% elif is_state('input_select.kanal', 'P1') %}
              http://sverigesradio.se/topsy/direkt/132-hi-mp3
            {% elif is_state('input_select.kanal', 'P3') %}
              http://sverigesradio.se/topsy/direkt/164-hi-mp3
            {% elif is_state('input_select.kanal', 'P4') %}
              http://sverigesradio.se/topsy/direkt/212-hi-mp3
            {% elif is_state('input_select.kanal', 'Radioapan') %}
              http://sverigesradio.se/topsy/direkt/2755-hi-mp3
            {% elif is_state('input_select.kanal', 'P4 Bjällerklang') %}
              http://sverigesradio.se/topsy/direkt/3034-hi-mp3
            {% endif %}
